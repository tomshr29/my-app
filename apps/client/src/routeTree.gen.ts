/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as DemoListAnimalsRouteImport } from './routes/demo.list.animals'
import { Route as DemoCreateAnimalRouteImport } from './routes/demo.create.animal'
import { Route as DemoShowAnimalAnimalIdRouteImport } from './routes/demo.show.animal.$animalId'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoListAnimalsRoute = DemoListAnimalsRouteImport.update({
  id: '/demo/list/animals',
  path: '/demo/list/animals',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoCreateAnimalRoute = DemoCreateAnimalRouteImport.update({
  id: '/demo/create/animal',
  path: '/demo/create/animal',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoShowAnimalAnimalIdRoute = DemoShowAnimalAnimalIdRouteImport.update({
  id: '/demo/show/animal/$animalId',
  path: '/demo/show/animal/$animalId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/demo/create/animal': typeof DemoCreateAnimalRoute
  '/demo/list/animals': typeof DemoListAnimalsRoute
  '/demo/show/animal/$animalId': typeof DemoShowAnimalAnimalIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/demo/create/animal': typeof DemoCreateAnimalRoute
  '/demo/list/animals': typeof DemoListAnimalsRoute
  '/demo/show/animal/$animalId': typeof DemoShowAnimalAnimalIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/demo/create/animal': typeof DemoCreateAnimalRoute
  '/demo/list/animals': typeof DemoListAnimalsRoute
  '/demo/show/animal/$animalId': typeof DemoShowAnimalAnimalIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/demo/create/animal'
    | '/demo/list/animals'
    | '/demo/show/animal/$animalId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/demo/create/animal'
    | '/demo/list/animals'
    | '/demo/show/animal/$animalId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/demo/create/animal'
    | '/demo/list/animals'
    | '/demo/show/animal/$animalId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  DemoCreateAnimalRoute: typeof DemoCreateAnimalRoute
  DemoListAnimalsRoute: typeof DemoListAnimalsRoute
  DemoShowAnimalAnimalIdRoute: typeof DemoShowAnimalAnimalIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/list/animals': {
      id: '/demo/list/animals'
      path: '/demo/list/animals'
      fullPath: '/demo/list/animals'
      preLoaderRoute: typeof DemoListAnimalsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/create/animal': {
      id: '/demo/create/animal'
      path: '/demo/create/animal'
      fullPath: '/demo/create/animal'
      preLoaderRoute: typeof DemoCreateAnimalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/show/animal/$animalId': {
      id: '/demo/show/animal/$animalId'
      path: '/demo/show/animal/$animalId'
      fullPath: '/demo/show/animal/$animalId'
      preLoaderRoute: typeof DemoShowAnimalAnimalIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  DemoCreateAnimalRoute: DemoCreateAnimalRoute,
  DemoListAnimalsRoute: DemoListAnimalsRoute,
  DemoShowAnimalAnimalIdRoute: DemoShowAnimalAnimalIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
