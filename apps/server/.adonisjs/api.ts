// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type RegisterPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['registerValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['register'], true>
}
type LoginPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['loginValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['login'], true>
}
type LogoutDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['logout'], false>
}
type MeGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['me'], false>
}
type AnimalsGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/animals_controller.ts').default['list'], false>
}
type AnimalsIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/animals_controller.ts').default['show'], false>
}
type AnimalsPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/animal.ts')['createAnimalValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/animals_controller.ts').default['create'], true>
}
type AnimalsIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/animal.ts')['updateAnimalValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/animals_controller.ts').default['update'], true>
}
type AnimalsIdDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/animals_controller.ts').default['delete'], false>
}
export interface ApiDefinition {
  'register': {
    '$url': {
    };
    '$post': RegisterPost;
  };
  'login': {
    '$url': {
    };
    '$post': LoginPost;
  };
  'logout': {
    '$url': {
    };
    '$delete': LogoutDelete;
  };
  'me': {
    '$url': {
    };
    '$get': MeGetHead;
    '$head': MeGetHead;
  };
  'animals': {
    '$url': {
    };
    '$get': AnimalsGetHead;
    '$head': AnimalsGetHead;
    ':id': {
      '$url': {
      };
      '$get': AnimalsIdGetHead;
      '$head': AnimalsIdGetHead;
      '$put': AnimalsIdPut;
      '$delete': AnimalsIdDelete;
    };
    '$post': AnimalsPost;
  };
}
const routes = [
  {
    params: [],
    name: 'auth.register',
    path: '/register',
    method: ["POST"],
    types: {} as RegisterPost,
  },
  {
    params: [],
    name: 'auth.login',
    path: '/login',
    method: ["POST"],
    types: {} as LoginPost,
  },
  {
    params: [],
    name: 'auth.logout',
    path: '/logout',
    method: ["DELETE"],
    types: {} as LogoutDelete,
  },
  {
    params: [],
    name: 'auth.me',
    path: '/me',
    method: ["GET","HEAD"],
    types: {} as MeGetHead,
  },
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
